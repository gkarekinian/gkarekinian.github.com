#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/_posts/*' do
  filter :redcarpet, renderer: ::Redcarpet::Render::Language,
                     options: { fenced_code_blocks: true }
  filter :colorize_syntax, :default_colorizer => :rouge
  layout 'post'
end

['/atom', '/feed', '/sitemap'].each do |xml_path|
  compile xml_path do
    filter :erb
  end
end

compile '*' do
  if ['css', 'js', 'txt'].include? item[:extension]
    # don’t filter
  elsif item[:extension] == 'haml'
    filter :haml
    layout 'default'
  elsif item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout 'default'
  end
end

route '/_posts/*' do
  y, m, d, slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-(.+)\//.match(item.identifier).captures

  "/blog/#{y}/#{m}/#{d}/#{slug}/index.html"
end

route '*' do
  if ['css', 'txt', 'xml'].include? item[:extension]
    # Write item with identifier /foo/ to /foo.ext
    "#{item.identifier.chop}.#{item[:extension]}"
  elsif item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml, filter: :html5, ugly: true
